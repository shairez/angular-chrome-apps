angular.module("chromeApps",[]),angular.module("chromeApps").constant("chromeApps.constants.ioTypes",{TEXT:"text"}),angular.module("chromeApps").directive("caSpeak",[function(){return{link:function(a,b,c){b.on("click",function(){a.$apply(function(){chrome.tts.speak(c.caSpeak)})})}}}]),angular.module("chromeApps").factory("chromeApps.services.adapters.chrome.syncFileSystemAdapter",["$q","chromeApps.services.adapters.html5.fileSystemWrapper","chromeApps.services.native.chrome.chromeAppsApi",function(a,b,c){var d=c.syncFileSystem;return{requestingFileSystem:function(){var c=a.defer();return d.requestFileSystem(function(a){c.resolve(b(a))}),c.promise}}}]),angular.module("chromeApps").factory("chromeApps.services.adapters.html5.directoryEntryWrapper",["$q","chromeApps.services.adapters.html5.fileEntryWrapper",function(a,b){return function(c){var c=c;return{gettingFileEntry:function(d,e){var f=a.defer();return c.getFile(d,e,function(a){var c=b(a);f.resolve(c)},function g(g){f.reject(g)}),f.promise}}}}]),angular.module("chromeApps").factory("chromeApps.services.adapters.html5.fileEntryWrapper",["$q","chromeApps.services.adapters.html5.fileWriterWrapper",function(a,b){return function(c){var c=c;return{creatingWriter:function(){var d=a.defer();return c.createWriter(function(a){d.resolve(b(a))},function(a){d.reject(a)}),d.promise},gettingFile:function(){var b=a.defer();return c.file(function(a){b.resolve(a)},function(a){b.reject(a)}),b.promise}}}}]),angular.module("chromeApps").factory("chromeApps.services.adapters.html5.fileReaderAdapter",["$q","chromeApps.services.adapters.html5.fileReaderFactory","chromeApps.constants.ioTypes",function(a,b,c){var d=b();return{gettingFileContent:function(b,e){var f=a.defer();switch(d.onerror=function(a){console.debug("read error",a.target.error),f.reject(a.target.error)},d.onload=function(a){f.resolve(a.target.result)},e){case c.TEXT:d.readAsText(b);break;default:f.reject("readType is not defined")}return f.promise}}}]),angular.module("chromeApps").factory("chromeApps.services.adapters.html5.fileReaderFactory",[function(){return function(){return new FileReader}}]),angular.module("chromeApps").factory("chromeApps.services.adapters.html5.fileSystemWrapper",["$q","chromeApps.services.adapters.html5.directoryEntryWrapper",function(a,b){return function(a){var a=a;return{getRoot:function(){return b(a.root)}}}}]),angular.module("chromeApps").factory("chromeApps.services.adapters.html5.fileWriterWrapper",["$q","chromeApps.constants.ioTypes",function(a,b){return function(c){function d(d,e){var f,g=a.defer();switch(c.onerror=function(a){console.debug("write error",a.target.error),g.reject(a.target.error)},c.onwrite=function(a){console.debug("@writingContent event",a),g.resolve(a.target)},e){case b.TEXT:f="text/plain"}return c.write(new Blob([d]),{type:f}),g.promise}var c=c;return{deleteFileContent:function(){var b=a.defer();return c.onerror=function(a){console.debug("truncate error",a.target.error),b.reject(a.target.error)},c.onwrite=function(a){b.resolve(a.target)},c.truncate(0),b.promise},writing:function(a,b,c){return c&&this.getLength()>0?this.deleteFileContent().then(function(){return d(a,b)},function(){console.debug("@writing Truncate Error",TruncateError)}):d(a,b)},getLength:function(){return c.length}}}}]),angular.module("chromeApps").factory("chromeApps.services.facades.syncFileSystemFacade",["chromeApps.services.adapters.chrome.syncFileSystemAdapter","chromeApps.services.adapters.html5.fileReaderAdapter","chromeApps.constants.ioTypes",function(a,b,c){function d(b){return a.requestingFileSystem().then(function(a){return a.getRoot().gettingFileEntry(b,{create:!0})})}function e(a,b){return a.creatingWriter().then(function(a){return console.log("============"),console.log("@writingFileTextByEntry got writerWrapper",a),b=b||"",a.writing(b,c.TEXT,!0)})}return{gettingTextFromFile:function(a){return d(a).then(function(a){return a.gettingFile().then(function(a){return b.gettingFileContent(a,c.TEXT)})})},savingTextToFile:function(a,b){return d(a).then(function(a){return e(a,b)})}}}]),angular.module("chromeApps").factory("chromeApps.services.native.chrome.chromeAppsApi",[function(){return window.chrome}]);